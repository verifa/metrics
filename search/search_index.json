{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Verifa Metrics Dashboard \u00b6 Development \u00b6 This project uses python-poetry to manage dependencies. Installing poetry: https://python-poetry.org/docs/#osx--linux--bashonwindows-install-instructions Check the pyproject.toml for Python requirements. Then simply: # Run the dev server make dev # Browse to http://localhost:8050 or to run a container with the built image make run # Browse http://localhost:8000 the run target uses the environment variable TEMPO_CONFIG_PATH, described below, as a mount point if set ifneq ($(TEMPO_CONFIG_PATH),) vmounts = -v $( TEMPO_CONFIG_PATH ) :/tempo else vmounts = endif To run a container that ignores the optional environment variable make bare # Browse http://localhost:8000 Note: To use podman , you can set the DOCKER variable to podman , e.g. make DOCKER=podman dev For more details about the different make target make help Runtime environment \u00b6 Key Notes TEMPO_KEY (required) To read data from tempo, the API key to use is expected as the TEMPO_KEY environment variable. TEMPO_CONFIG_PATH (optional) To be able to add secret configurations there is a default config path /tempo where secrets can be mounted as files. For development purposes the environment variable TEMPO_CONFIG_PATH overrides the default value for config files. TEMPO_LOG_LEVEL (optional) Tempo uses logging for logging, with the default log level WARNING . This can be changed by setting the environment variable TEMPO_LOG_LEVEL to any value in [\"DEBUG\", \"INFO\", \"WARNING\", \"ERROR\", \"CRITICAL\"] NOTION_KEY (optional) Notion API key. NOTION_OKR_DATABASE_ID (optional) Requires: NOTION_KEY The ID for a specific database in Notion, see this link. NOTION_OKR_LABELS (optional) Requires: NOTION_KEY and NOTION_OKR_DATABASE_ID The labels used in Notion. NOTION_FINANCIAL_DATABASE_ID (optional) Requires: NOTION_KEY Like the example of NOTION_OKR_DATABASE , a database ID from notion is needed. The database should include the column names Month , cost , total-cost-b2b , and total-income . NOTION_WORKINGHOURS_DATABASE_ID (optional) Requires: NOTION_KEY Like the example of NOTION_OKR_DATABASE , a database ID from notion is needed. The database should include the column names User , Daily , Delta , Start , and Stop . Configuration files \u00b6 Metrics is expecting a simple layout for the optional configuration files. A folder structure found in /tempo or, if set, in ${TEMPO_CONFIG_PATH}. . \u2514\u2500\u2500 rates \u2514\u2500\u2500 data.json rates \u00b6 The rates file contains 4 lists - Default is a list with project issue keys, rate and currency - Exceptions is a list of with exceptions if different users have a different rate for the same issue key - Internal is a list of tempo project is considered internal, even if they are set to billable in tempo - Currency is a list of exchange rates, \u20ac is the currency used in the metrics, so for other currencies a simple conversion is used { \"Default\" : [ { \"Key\" : \"CUS-1\" , \"Rate\" : \"100\" , \"Currency\" : \"EUR\" }, ..... { \"Key\" : \"AB-1\" , \"Rate\" : \"1000\" , \"Currency\" : \"SEK\" }, ], \"Exceptions\" : [ { \"Key\" : \"CUS-1\" , \"Rate\" : \"125\" , \"User\" : \"Alice Architect\" }, ... ], \"Internal\" : [ { \"Key\" : \"US\" }, ... ], \"Currency\" : [ { \"SEK2EUR\" : \"0.1\" } ] }","title":"Verifa Metrics Dashboard"},{"location":"#verifa-metrics-dashboard","text":"","title":"Verifa Metrics Dashboard"},{"location":"#development","text":"This project uses python-poetry to manage dependencies. Installing poetry: https://python-poetry.org/docs/#osx--linux--bashonwindows-install-instructions Check the pyproject.toml for Python requirements. Then simply: # Run the dev server make dev # Browse to http://localhost:8050 or to run a container with the built image make run # Browse http://localhost:8000 the run target uses the environment variable TEMPO_CONFIG_PATH, described below, as a mount point if set ifneq ($(TEMPO_CONFIG_PATH),) vmounts = -v $( TEMPO_CONFIG_PATH ) :/tempo else vmounts = endif To run a container that ignores the optional environment variable make bare # Browse http://localhost:8000 Note: To use podman , you can set the DOCKER variable to podman , e.g. make DOCKER=podman dev For more details about the different make target make help","title":"Development"},{"location":"#runtime-environment","text":"Key Notes TEMPO_KEY (required) To read data from tempo, the API key to use is expected as the TEMPO_KEY environment variable. TEMPO_CONFIG_PATH (optional) To be able to add secret configurations there is a default config path /tempo where secrets can be mounted as files. For development purposes the environment variable TEMPO_CONFIG_PATH overrides the default value for config files. TEMPO_LOG_LEVEL (optional) Tempo uses logging for logging, with the default log level WARNING . This can be changed by setting the environment variable TEMPO_LOG_LEVEL to any value in [\"DEBUG\", \"INFO\", \"WARNING\", \"ERROR\", \"CRITICAL\"] NOTION_KEY (optional) Notion API key. NOTION_OKR_DATABASE_ID (optional) Requires: NOTION_KEY The ID for a specific database in Notion, see this link. NOTION_OKR_LABELS (optional) Requires: NOTION_KEY and NOTION_OKR_DATABASE_ID The labels used in Notion. NOTION_FINANCIAL_DATABASE_ID (optional) Requires: NOTION_KEY Like the example of NOTION_OKR_DATABASE , a database ID from notion is needed. The database should include the column names Month , cost , total-cost-b2b , and total-income . NOTION_WORKINGHOURS_DATABASE_ID (optional) Requires: NOTION_KEY Like the example of NOTION_OKR_DATABASE , a database ID from notion is needed. The database should include the column names User , Daily , Delta , Start , and Stop .","title":"Runtime environment"},{"location":"#configuration-files","text":"Metrics is expecting a simple layout for the optional configuration files. A folder structure found in /tempo or, if set, in ${TEMPO_CONFIG_PATH}. . \u2514\u2500\u2500 rates \u2514\u2500\u2500 data.json","title":"Configuration files"},{"location":"#rates","text":"The rates file contains 4 lists - Default is a list with project issue keys, rate and currency - Exceptions is a list of with exceptions if different users have a different rate for the same issue key - Internal is a list of tempo project is considered internal, even if they are set to billable in tempo - Currency is a list of exchange rates, \u20ac is the currency used in the metrics, so for other currencies a simple conversion is used { \"Default\" : [ { \"Key\" : \"CUS-1\" , \"Rate\" : \"100\" , \"Currency\" : \"EUR\" }, ..... { \"Key\" : \"AB-1\" , \"Rate\" : \"1000\" , \"Currency\" : \"SEK\" }, ], \"Exceptions\" : [ { \"Key\" : \"CUS-1\" , \"Rate\" : \"125\" , \"User\" : \"Alice Architect\" }, ... ], \"Internal\" : [ { \"Key\" : \"US\" }, ... ], \"Currency\" : [ { \"SEK2EUR\" : \"0.1\" } ] }","title":"rates"}]}